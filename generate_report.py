# generate_report.py - توليد تقرير PDF لتلخيص محاولات الدخول

from reportlab.lib.pagesizes import A4
from reportlab.pdfgen import canvas
from reportlab.platypus import Image
import csv
import os

def create_pdf_report():
    c = canvas.Canvas("login_report.pdf", pagesize=A4)
    width, height = A4
    y = height - 50

    c.setFont("Helvetica-Bold", 16)
    c.drawString(50, y, "Login Activity Analysis Report")
    y -= 30

    c.setFont("Helvetica", 12)
    c.drawString(50, y, "This report includes login behavior based on system event logs.")
    y -= 40

    # Section: Failed Logins Summary
    c.setFont("Helvetica-Bold", 14)
    c.drawString(50, y, "Summary: Failed Login Attempts")
    y -= 20
    c.setFont("Helvetica", 10)

    if os.path.exists('failed_logins.csv'):
        with open('failed_logins.csv', newline='', encoding='utf-8') as file:
            reader = csv.DictReader(file)
            count = 0
            for row in reader:
                if y < 100:
                    c.showPage()
                    y = height - 50
                message = str(row["Message"])[:100]
                c.drawString(60, y, f"- {row['TimeGenerated']}: {message}")
                y -= 15
                count += 1
                if count >= 5:
                    break  # تلخيص أول 5 فقط

    y -= 20

    # Section: Include Chart Image
    if os.path.exists("login_chart.png"):
        c.setFont("Helvetica-Bold", 14)
        c.drawString(50, y, "Login Chart (Failed vs Successful)")
        y -= 200
        try:
            c.drawImage("login_chart.png", 100, y, width=400, preserveAspectRatio=True, mask='auto')
            y -= 20
        except:
            c.drawString(50, y, "[ERROR] Failed to load chart image.")

    # Footer
    c.setFont("Helvetica-Oblique", 10)
    c.drawString(50, 40, "Generated by your custom security tool - Yarmouk University project")

    c.save()
    print("[OK] PDF report created: login_report.pdf")

if __name__ == "__main__":
    create_pdf_report()
